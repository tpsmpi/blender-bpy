name: Build Blender 3 Python Module

on:
  workflow_dispatch:
    inputs:
      blender_version:
        description: "Version"
        required: true
        default: "3.0"
      runner:
        description: "Runner"
        required: true
        default: "ubuntu-20.04"

jobs:
  build_blender:
    name: Build Blender Python Module Job
    runs-on: ${{ github.event.inputs.runner }}
    env:
      BLENDER_VERSION: ${{ github.event.inputs.blender_version }}
    steps:
      - name: Info
        run: |
          echo Building Blender Python module version $BLENDER_VERSION
      - name: Install dependencies
        run: |
          sudo apt update
          sudo apt install -y \
              build-essential \
              git \
              subversion \
              cmake \
              libx11-dev \
              libxxf86vm-dev \
              libxcursor-dev \
              libxi-dev \
              libxrandr-dev \
              libxinerama-dev \
              libglew-dev \
              python3
      - name: Checkout Blender sources from GitHub
        uses: actions/checkout@v2
        with:
          repository: "blender/blender"
          path: blender-build/blender
          ref: "blender-v${{ env.BLENDER_VERSION }}-release"
          submodules: recursive
      - name: Store code SHA
        run: |
          cd blender-build/blender
          echo "BLENDER_CODE_SHA=`git rev-parse --short HEAD`" >> $GITHUB_ENV
          echo Using Blender code version $BLENDER_CODE_SHA
      - name: Checkout precompiled library dependencies
        run: |
          mkdir blender-build/lib
          cd blender-build/lib
          svn checkout https://svn.blender.org/svnroot/bf-blender/tags/blender-${{ env.BLENDER_VERSION }}-release/lib/linux_centos7_x86_64
      - name: Build system preparation
        # Blender 2.93.5 needs gcc 9.3+ toolchain. Available by default in Ubuntu 20.04 runners but needs setup for Ubuntu 18.04.
        if: ${{ github.event.inputs.runner == 'ubuntu-18.04' }}
        run: |
          echo Use gcc 9 toolchain
          echo "CC=gcc-9" >> $GITHUB_ENV        
          echo "CXX=g++-9" >> $GITHUB_ENV
      - name: Build Blender bpy.so
        run: |
          cd blender-build/blender
          make bpy
      - name: Compress compiled Blender build
        run: |
          VERSION=${BLENDER_VERSION%.*}
          mkdir release
          tar Jcf release/blender-bpy-$BLENDER_VERSION-${{ github.event.inputs.runner }}.tar.xz -C blender-build/lib/linux_centos7_x86_64/python/lib/python3.9/site-packages/ bpy.so $VERSION/
      - name: Create MD5 checksum file
        run: |
          cd release
          md5sum blender-bpy-$BLENDER_VERSION-${{ github.event.inputs.runner }}.tar.xz > blender-bpy-$BLENDER_VERSION-${{ github.event.inputs.runner }}.tar.xz.md5
      - name: Upload artifact 
        uses: actions/upload-artifact@v2
        with:
          name: blender-bpy-${{ env.BLENDER_VERSION }}-${{ github.event.inputs.runner }}-${{ env.BLENDER_CODE_SHA }}
          path: "release"
          
